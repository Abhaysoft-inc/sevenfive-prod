// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String             @id @default(uuid())
  name              String
  email             String             @unique
  phone             String
  password          String
  college           String? // Made optional
  branch            String
  batch             String
  year              Year               @default(FIRST)
  role              Role               @default(STUDENT)
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  attendanceRecords AttendanceRecord[]
}

enum Year {
  FIRST
  SECOND
  THIRD
  FOURTH
}

model Subject {
  id                String             @id @default(uuid())
  name              String
  code              String
  branch            String
  year              Year
  attendanceRecords AttendanceRecord[]
  schedules         Schedule[]
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt

  @@unique([code, branch, year])
}

model AttendanceRecord {
  id        String           @id @default(uuid())
  userId    String
  subjectId String
  date      DateTime         @default(now())
  status    AttendanceStatus
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  user      User             @relation(fields: [userId], references: [id])
  subject   Subject          @relation(fields: [subjectId], references: [id])

  @@unique([userId, subjectId, date])
}

enum AttendanceStatus {
  PRESENT
  ABSENT
  CANCELLED
}

model Branch {
  id        String   @id @default(uuid())
  name      String   @unique
  code      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  batches   Batch[]
}

model Batch {
  id        String     @id @default(uuid())
  name      String
  branchId  String
  year      Year
  branch    Branch     @relation(fields: [branchId], references: [id])
  schedules Schedule[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@unique([name, branchId, year])
}

model Schedule {
  id        String    @id @default(uuid())
  batchId   String
  subjectId String
  dayOfWeek DayOfWeek
  startTime String // Format: "HH:MM"
  endTime   String // Format: "HH:MM"
  validFrom DateTime // The date from which this schedule is valid (inclusive)
  validTo   DateTime? // The date until which this schedule is valid (inclusive, null = open-ended)
  batch     Batch     @relation(fields: [batchId], references: [id])
  subject   Subject   @relation(fields: [subjectId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@unique([batchId, dayOfWeek, startTime, validFrom])
}

enum DayOfWeek {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

enum Role {
  ADMIN
  STUDENT
}
